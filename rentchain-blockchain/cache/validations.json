{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "5f9dfe97820bc4a14500f42ea2930441dca798fac39f02a16362b8cd29fc6afa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "1d6f9cfce405f1397cff3b2e5d2737b4d4086c495d8476175ae55ea43e8dfc38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "c1f4546bbd850723d69183e656d5a123029205377d830634200ac0c36d9296a8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "5f46a4584c437cd91e6e4386b93037e61fa724904275bd84b5f58da24743a61f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "e34a460afe63f8e676880ba0751522137768df1fdd3fff06c598d9006111366b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Chat.sol:Chat": {
        "src": "contracts/Chat.sol:14",
        "version": {
          "withMetadata": "c3b6a029f2c5e609ebd04a014ee8956af053d0b870816ff1398ff4f60f5ee505",
          "withoutMetadata": "ac4812ab52615cf7a9c37f88b1af3cdf89e7bfc80cf05e462a805153b4f954cc",
          "linkedWithoutMetadata": "ac4812ab52615cf7a9c37f88b1af3cdf89e7bfc80cf05e462a805153b4f954cc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "logMessage(address,string,uint256)",
          "markMessageAsRead(uint256)",
          "getMessage(uint256)",
          "getMessages(address,address)",
          "getUserMessages(address)",
          "getPropertyMessages(uint256)",
          "getUnreadMessages(address)",
          "getRecentMessages(address,uint256)",
          "getTotalMessages()",
          "getUnreadMessageCount(address)",
          "isMessageRead(uint256)",
          "getConversationParticipants(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Chat",
            "src": "contracts/Chat.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "messages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Message)1932_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:27"
            },
            {
              "label": "userMessages",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:30"
            },
            {
              "label": "conversationMessages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
              "contract": "Chat",
              "src": "contracts/Chat.sol:33"
            },
            {
              "label": "propertyMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:36"
            },
            {
              "label": "totalMessages",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Chat",
              "src": "contracts/Chat.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(address => uint256[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Message)1932_storage)": {
              "label": "mapping(uint256 => struct Chat.Message)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Message)1932_storage": {
              "label": "struct Chat.Message",
              "members": [
                {
                  "label": "messageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isRead",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Complaints.sol:Complaints": {
        "src": "contracts/Complaints.sol:14",
        "version": {
          "withMetadata": "8c2a821560114c04cf2089e88e95ba557b9d6146921008d19a002be4fe1c236c",
          "withoutMetadata": "e57eaaf02329d1d7f4e4d1a2e986ff4203ae3471266c764ef79ddd15e804acd6",
          "linkedWithoutMetadata": "e57eaaf02329d1d7f4e4d1a2e986ff4203ae3471266c764ef79ddd15e804acd6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "logComplaint(uint256,string)",
          "resolveComplaint(uint256)",
          "setPropertyLandlord(uint256,address)",
          "getComplaint(uint256)",
          "getPropertyComplaints(uint256)",
          "getTenantComplaints(address)",
          "getOpenPropertyComplaints(uint256)",
          "getTotalComplaints()",
          "getTotalOpenComplaints()",
          "getPropertyLandlord(uint256)",
          "isComplaintOpen(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Complaints",
            "src": "contracts/Complaints.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "complaints",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Complaint)2790_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:31"
            },
            {
              "label": "propertyComplaints",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:34"
            },
            {
              "label": "tenantComplaints",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:37"
            },
            {
              "label": "propertyLandlords",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:40"
            },
            {
              "label": "totalComplaints",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ComplaintStatus)2772": {
              "label": "enum Complaints.ComplaintStatus",
              "members": [
                "Open",
                "Resolved"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Complaint)2790_storage)": {
              "label": "mapping(uint256 => struct Complaints.Complaint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Complaint)2790_storage": {
              "label": "struct Complaints.Complaint",
              "members": [
                {
                  "label": "complaintId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "status",
                  "type": "t_enum(ComplaintStatus)2772",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resolvedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "resolvedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CreditScore.sol:CreditScore": {
        "src": "contracts/CreditScore.sol:14",
        "version": {
          "withMetadata": "595daf5eb50c316c4bf6838cc16913f3f29b2963454dd914351861c36709188d",
          "withoutMetadata": "6c1434cac682a20ee0cab17a9d3bf932b35ef9e66946110ad9c9dbc888c6ca84",
          "linkedWithoutMetadata": "6c1434cac682a20ee0cab17a9d3bf932b35ef9e66946110ad9c9dbc888c6ca84"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePaymentHistory(address,uint256,bool)",
          "updateComplaintHistory(address,uint256,bool)",
          "updateRating(address,uint256,uint8)",
          "calculateCreditScore(address)",
          "getRentalHistory(address,uint256)",
          "setAuthorizedContract(address,bool)",
          "isAuthorizedContract(address)",
          "getPaymentTimelinessPercentage(address)",
          "getComplaintResolutionRate(address)",
          "getAverageRating(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreditScore",
            "src": "contracts/CreditScore.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "rentalHistory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RentalHistory)3367_storage))",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:28"
            },
            {
              "label": "creditScores",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:31"
            },
            {
              "label": "authorizedContracts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(RentalHistory)3367_storage))": {
              "label": "mapping(address => mapping(uint256 => struct CreditScore.RentalHistory))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RentalHistory)3367_storage)": {
              "label": "mapping(uint256 => struct CreditScore.RentalHistory)",
              "numberOfBytes": "32"
            },
            "t_struct(RentalHistory)3367_storage": {
              "label": "struct CreditScore.RentalHistory",
              "members": [
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "paymentCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "onTimePayments",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "complaintsResolved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalRating",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ratingCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Escrow.sol:Escrow": {
        "src": "contracts/Escrow.sol:16",
        "version": {
          "withMetadata": "12ebc92bfe8a50def92c1e0a9f274273f795b359535c43ddb6e8323c312d6ecb",
          "withoutMetadata": "58b0d7fd2a9a4b9ad2ea6a50e18ba8c9ae422ea210d4515c55720483ae83b4a2",
          "linkedWithoutMetadata": "58b0d7fd2a9a4b9ad2ea6a50e18ba8c9ae422ea210d4515c55720483ae83b4a2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "createPayment(address,uint256,uint256,uint256)",
          "payWithUSDT(uint256)",
          "recordFiatPayment(uint256,string)",
          "disputePayment(uint256,string)",
          "refundPayment(uint256)",
          "getPayment(uint256)",
          "getPropertyPayments(uint256)",
          "getUserPayments(address)",
          "getPendingPayments(address)",
          "getOverduePayments(address)",
          "updatePlatformFee(uint256)",
          "updateUSDTAddress(address)",
          "getPlatformStats()",
          "calculateFee(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/Escrow.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)816",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "payments",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Payment)4051_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:52"
            },
            {
              "label": "propertyPayments",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "userPayments",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:58"
            },
            {
              "label": "totalPayments",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:61"
            },
            {
              "label": "totalUSDTVolume",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:62"
            },
            {
              "label": "totalFiatVolume",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:63"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)816": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(PaymentStatus)4057": {
              "label": "enum Escrow.PaymentStatus",
              "members": [
                "Pending",
                "Paid",
                "Late",
                "Disputed",
                "Refunded"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(PaymentType)4060": {
              "label": "enum Escrow.PaymentType",
              "members": [
                "USDT",
                "FiatOnRamp"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Payment)4051_storage)": {
              "label": "mapping(uint256 => struct Escrow.Payment)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Payment)4051_storage": {
              "label": "struct Escrow.Payment",
              "members": [
                {
                  "label": "paymentId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dueDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "paidDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "status",
                  "type": "t_enum(PaymentStatus)4057",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "paymentType",
                  "type": "t_enum(PaymentType)4060",
                  "offset": 1,
                  "slot": "7"
                },
                {
                  "label": "transactionHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Language.sol:Language": {
        "src": "contracts/Language.sol:14",
        "version": {
          "withMetadata": "97b252d233d430e4598824ec3246f304df175d5af105c396c16db61e618085f6",
          "withoutMetadata": "621e4d3c1778ecdffeac4cb37449ac771a39004ce60f798ab95c0e88d04c46a8",
          "linkedWithoutMetadata": "621e4d3c1778ecdffeac4cb37449ac771a39004ce60f798ab95c0e88d04c46a8"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setLanguagePreference(string)",
          "setTranslationFile(string,string)",
          "addSupportedLanguage(string)",
          "removeSupportedLanguage(string)",
          "getLanguagePreference(address)",
          "getTranslationFile(string)",
          "getTranslationFileDetails(string)",
          "getSupportedLanguages()",
          "getUserLanguageDetails(address)",
          "isLanguageCodeSupported(string)",
          "getTotalSupportedLanguages()",
          "getTranslationFileVersion(string)",
          "getUsersByLanguage(string,uint256,uint256)",
          "getLanguageStats()",
          "isValidLanguageCode(string)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Language",
            "src": "contracts/Language.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "userLanguages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserLanguage)5089_storage)",
              "contract": "Language",
              "src": "contracts/Language.sol:32"
            },
            {
              "label": "translationFiles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TranslationFile)5100_storage)",
              "contract": "Language",
              "src": "contracts/Language.sol:35"
            },
            {
              "label": "supportedLanguages",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Language",
              "src": "contracts/Language.sol:38"
            },
            {
              "label": "isLanguageSupported",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "Language",
              "src": "contracts/Language.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(UserLanguage)5089_storage)": {
              "label": "mapping(address => struct Language.UserLanguage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TranslationFile)5100_storage)": {
              "label": "mapping(string => struct Language.TranslationFile)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TranslationFile)5100_storage": {
              "label": "struct Language.TranslationFile",
              "members": [
                {
                  "label": "languageCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "version",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "updatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserLanguage)5089_storage": {
              "label": "struct Language.UserLanguage",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "languageCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Listings.sol:Listings": {
        "src": "contracts/Listings.sol:14",
        "version": {
          "withMetadata": "d9835c0854a7f497e38a4273ac31a707712b3765aaad173d4c9a02e1e489edf6",
          "withoutMetadata": "c3c03a7e74484c80eb4e9700a822aa1300dd68eff3efbcd24f448e0406104dcc",
          "linkedWithoutMetadata": "c3c03a7e74484c80eb4e9700a822aa1300dd68eff3efbcd24f448e0406104dcc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addProperty(string,uint8,uint256,string)",
          "editProperty(uint256,string,uint8,uint256,string)",
          "toggleAvailability(uint256,bool)",
          "verifyLandlord(address,string)",
          "updateLandlordKYC(address,string)",
          "getProperty(uint256)",
          "getLandlordProperties(address)",
          "getAvailableProperties(uint256,uint256)",
          "getTotalProperties()",
          "getLandlordKYC(address)",
          "isLandlordVerified(address)",
          "pause()",
          "unpause()",
          "updateProperty(uint256,string,uint8,uint256,string)",
          "removeProperty(uint256)",
          "getAllProperties()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Listings",
            "src": "contracts/Listings.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Property)5874_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:32"
            },
            {
              "label": "landlordProperties",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:35"
            },
            {
              "label": "availableProperties",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:38"
            },
            {
              "label": "totalProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Listings",
              "src": "contracts/Listings.sol:41"
            },
            {
              "label": "landlordKYC",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(PropertyType)5854": {
              "label": "enum Listings.PropertyType",
              "members": [
                "House",
                "Office"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)5874_storage)": {
              "label": "mapping(uint256 => struct Listings.Property)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Property)5874_storage": {
              "label": "struct Listings.Property",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "propertyType",
                  "type": "t_enum(PropertyType)5854",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rentAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAvailable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OnRamp.sol:OnRamp": {
        "src": "contracts/OnRamp.sol:14",
        "version": {
          "withMetadata": "4b7a00c0e92fa860a784da11802ca2ea66b7f31b3cedf47869c12e3984bc54a6",
          "withoutMetadata": "8ac18098c5362b298a51a3267c8d0ea36aeb64196233f2d385580e28cd2f3cbf",
          "linkedWithoutMetadata": "8ac18098c5362b298a51a3267c8d0ea36aeb64196233f2d385580e28cd2f3cbf"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "recordOnRamp(address,uint256,uint256,string)",
          "verifyTransaction(uint256,string)",
          "setAuthorizedContract(address,bool)",
          "getOnRampTx(uint256)",
          "getTransactionByProviderId(string)",
          "getTenantTransactions(address)",
          "getPropertyTransactions(uint256)",
          "getVerifiedTenantTransactions(address)",
          "getTenantTotalAmount(address)",
          "getTenantVerifiedAmount(address)",
          "getTotalTransactions()",
          "getTotalVerifiedTransactions()",
          "isTransactionVerified(uint256)",
          "isOnRampTxIdRecorded(string)",
          "isAuthorizedContract(address)",
          "getRecentTenantTransactions(address,uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OnRamp",
            "src": "contracts/OnRamp.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "onRampTransactions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(OnRampTransaction)6769_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:28"
            },
            {
              "label": "tenantTransactions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:31"
            },
            {
              "label": "propertyTransactions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:34"
            },
            {
              "label": "providerTransactionMap",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:37"
            },
            {
              "label": "totalTransactions",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:40"
            },
            {
              "label": "authorizedContracts",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OnRampTransaction)6769_storage)": {
              "label": "mapping(uint256 => struct OnRamp.OnRampTransaction)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OnRampTransaction)6769_storage": {
              "label": "struct OnRamp.OnRampTransaction",
              "members": [
                {
                  "label": "transactionId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "onRampTxId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isVerified",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "verificationHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Reminders.sol:Reminders": {
        "src": "contracts/Reminders.sol:14",
        "version": {
          "withMetadata": "5efe78049ff53064448e0fcad464ba8f1ee81264e0a1c0f384cad090f409ef6c",
          "withoutMetadata": "9f194b214085bd3b821dc3638fb7924d34c73a3b456f7b83fe353fb625280ec0",
          "linkedWithoutMetadata": "9f194b214085bd3b821dc3638fb7924d34c73a3b456f7b83fe353fb625280ec0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setReminder(uint256,address,address,uint256,uint8,string)",
          "triggerReminder(uint256)",
          "cancelReminder(uint256)",
          "updateKeeperRegistry(address)",
          "getReminder(uint256)",
          "getPropertyReminders(uint256)",
          "getTenantReminders(address)",
          "getLandlordReminders(address)",
          "getActiveReminders(uint256,uint256)",
          "getDueReminders(uint256)",
          "getTotalReminders()",
          "getTotalActiveReminders()",
          "isReminderActive(uint256)",
          "isReminderDue(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reminders",
            "src": "contracts/Reminders.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "reminders",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Reminder)7557_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:33"
            },
            {
              "label": "propertyReminders",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:36"
            },
            {
              "label": "tenantReminders",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:39"
            },
            {
              "label": "landlordReminders",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:42"
            },
            {
              "label": "activeReminders",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:45"
            },
            {
              "label": "totalReminders",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:48"
            },
            {
              "label": "keeperRegistry",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ReminderType)7535": {
              "label": "enum Reminders.ReminderType",
              "members": [
                "Rent",
                "Complaint"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Reminder)7557_storage)": {
              "label": "mapping(uint256 => struct Reminders.Reminder)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Reminder)7557_storage": {
              "label": "struct Reminders.Reminder",
              "members": [
                {
                  "label": "reminderId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dueDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "reminderType",
                  "type": "t_enum(ReminderType)7535",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "5"
                },
                {
                  "label": "isTriggered",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "5"
                },
                {
                  "label": "triggeredAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/RentChain.sol:RentChain": {
        "src": "contracts/RentChain.sol:25",
        "version": {
          "withMetadata": "86aa15f85b9117492d37b5fcf22f1a220d50ec7548f970435fe374e9a1d1a0bd",
          "withoutMetadata": "8229428446c29c40238cfeb4389be737c6fbdcdfc89b2221525b8d5253c0b5aa",
          "linkedWithoutMetadata": "8229428446c29c40238cfeb4389be737c6fbdcdfc89b2221525b8d5253c0b5aa"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address,address,address)",
          "updateContract(string,address)",
          "pausePlatform(string)",
          "unpausePlatform()",
          "getContractAddresses()",
          "getPlatformStats()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RentChain",
            "src": "contracts/RentChain.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "escrowContract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(Escrow)5070",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:27"
            },
            {
              "label": "listingsContract",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Listings)6740",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:28"
            },
            {
              "label": "complaintsContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(Complaints)3338",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:29"
            },
            {
              "label": "reportsContract",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(Reports)9793",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:30"
            },
            {
              "label": "creditScoreContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(CreditScore)4007",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:31"
            },
            {
              "label": "remindersContract",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(Reminders)8367",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:32"
            },
            {
              "label": "chatContract",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(Chat)2757",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:33"
            },
            {
              "label": "onRampContract",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(OnRamp)7520",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:34"
            },
            {
              "label": "languageContract",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(Language)5839",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Chat)2757": {
              "label": "contract Chat",
              "numberOfBytes": "20"
            },
            "t_contract(Complaints)3338": {
              "label": "contract Complaints",
              "numberOfBytes": "20"
            },
            "t_contract(CreditScore)4007": {
              "label": "contract CreditScore",
              "numberOfBytes": "20"
            },
            "t_contract(Escrow)5070": {
              "label": "contract Escrow",
              "numberOfBytes": "20"
            },
            "t_contract(Language)5839": {
              "label": "contract Language",
              "numberOfBytes": "20"
            },
            "t_contract(Listings)6740": {
              "label": "contract Listings",
              "numberOfBytes": "20"
            },
            "t_contract(OnRamp)7520": {
              "label": "contract OnRamp",
              "numberOfBytes": "20"
            },
            "t_contract(Reminders)8367": {
              "label": "contract Reminders",
              "numberOfBytes": "20"
            },
            "t_contract(Reports)9793": {
              "label": "contract Reports",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Reports.sol:Reports": {
        "src": "contracts/Reports.sol:14",
        "version": {
          "withMetadata": "74bed61ced439651b852d68fe513a7427caa1f8b01226b96b8c97ac6583066e5",
          "withoutMetadata": "3fbf69188704cbe5799135d07d7d6c4135491875a72d09560a1b065bb0bf2f37",
          "linkedWithoutMetadata": "3fbf69188704cbe5799135d07d7d6c4135491875a72d09560a1b065bb0bf2f37"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "submitReport(address,uint256,uint8,string)",
          "disputeReport(uint256,string)",
          "setPropertyLandlord(uint256,address)",
          "getReport(uint256)",
          "getTenantReports(address)",
          "getPropertyReports(uint256)",
          "getTenantAverageRating(address)",
          "getTotalReports()",
          "getTotalDisputedReports()",
          "getPropertyLandlord(uint256)",
          "isReportDisputed(uint256)",
          "getValidTenantReports(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reports",
            "src": "contracts/Reports.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "reports",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Report)9153_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:29"
            },
            {
              "label": "tenantReports",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:32"
            },
            {
              "label": "propertyReports",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:35"
            },
            {
              "label": "propertyLandlords",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:38"
            },
            {
              "label": "totalReports",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Reports",
              "src": "contracts/Reports.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Report)9153_storage)": {
              "label": "mapping(uint256 => struct Reports.Report)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Report)9153_storage": {
              "label": "struct Reports.Report",
              "members": [
                {
                  "label": "reportId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rating",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isDisputed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "klerosDisputeId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "disputedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "5f9dfe97820bc4a14500f42ea2930441dca798fac39f02a16362b8cd29fc6afa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "1d6f9cfce405f1397cff3b2e5d2737b4d4086c495d8476175ae55ea43e8dfc38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "c1f4546bbd850723d69183e656d5a123029205377d830634200ac0c36d9296a8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "5f46a4584c437cd91e6e4386b93037e61fa724904275bd84b5f58da24743a61f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "e34a460afe63f8e676880ba0751522137768df1fdd3fff06c598d9006111366b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Chat.sol:Chat": {
        "src": "contracts/Chat.sol:14",
        "version": {
          "withMetadata": "c3b6a029f2c5e609ebd04a014ee8956af053d0b870816ff1398ff4f60f5ee505",
          "withoutMetadata": "ac4812ab52615cf7a9c37f88b1af3cdf89e7bfc80cf05e462a805153b4f954cc",
          "linkedWithoutMetadata": "ac4812ab52615cf7a9c37f88b1af3cdf89e7bfc80cf05e462a805153b4f954cc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "logMessage(address,string,uint256)",
          "markMessageAsRead(uint256)",
          "getMessage(uint256)",
          "getMessages(address,address)",
          "getUserMessages(address)",
          "getPropertyMessages(uint256)",
          "getUnreadMessages(address)",
          "getRecentMessages(address,uint256)",
          "getTotalMessages()",
          "getUnreadMessageCount(address)",
          "isMessageRead(uint256)",
          "getConversationParticipants(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Chat",
            "src": "contracts/Chat.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "messages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Message)1932_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:27"
            },
            {
              "label": "userMessages",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:30"
            },
            {
              "label": "conversationMessages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
              "contract": "Chat",
              "src": "contracts/Chat.sol:33"
            },
            {
              "label": "propertyMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:36"
            },
            {
              "label": "totalMessages",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Chat",
              "src": "contracts/Chat.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(address => uint256[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Message)1932_storage)": {
              "label": "mapping(uint256 => struct Chat.Message)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Message)1932_storage": {
              "label": "struct Chat.Message",
              "members": [
                {
                  "label": "messageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isRead",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Complaints.sol:Complaints": {
        "src": "contracts/Complaints.sol:14",
        "version": {
          "withMetadata": "8c2a821560114c04cf2089e88e95ba557b9d6146921008d19a002be4fe1c236c",
          "withoutMetadata": "e57eaaf02329d1d7f4e4d1a2e986ff4203ae3471266c764ef79ddd15e804acd6",
          "linkedWithoutMetadata": "e57eaaf02329d1d7f4e4d1a2e986ff4203ae3471266c764ef79ddd15e804acd6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "logComplaint(uint256,string)",
          "resolveComplaint(uint256)",
          "setPropertyLandlord(uint256,address)",
          "getComplaint(uint256)",
          "getPropertyComplaints(uint256)",
          "getTenantComplaints(address)",
          "getOpenPropertyComplaints(uint256)",
          "getTotalComplaints()",
          "getTotalOpenComplaints()",
          "getPropertyLandlord(uint256)",
          "isComplaintOpen(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Complaints",
            "src": "contracts/Complaints.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "complaints",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Complaint)2790_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:31"
            },
            {
              "label": "propertyComplaints",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:34"
            },
            {
              "label": "tenantComplaints",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:37"
            },
            {
              "label": "propertyLandlords",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:40"
            },
            {
              "label": "totalComplaints",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ComplaintStatus)2772": {
              "label": "enum Complaints.ComplaintStatus",
              "members": [
                "Open",
                "Resolved"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Complaint)2790_storage)": {
              "label": "mapping(uint256 => struct Complaints.Complaint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Complaint)2790_storage": {
              "label": "struct Complaints.Complaint",
              "members": [
                {
                  "label": "complaintId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "status",
                  "type": "t_enum(ComplaintStatus)2772",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resolvedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "resolvedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CreditScore.sol:CreditScore": {
        "src": "contracts/CreditScore.sol:14",
        "version": {
          "withMetadata": "595daf5eb50c316c4bf6838cc16913f3f29b2963454dd914351861c36709188d",
          "withoutMetadata": "6c1434cac682a20ee0cab17a9d3bf932b35ef9e66946110ad9c9dbc888c6ca84",
          "linkedWithoutMetadata": "6c1434cac682a20ee0cab17a9d3bf932b35ef9e66946110ad9c9dbc888c6ca84"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePaymentHistory(address,uint256,bool)",
          "updateComplaintHistory(address,uint256,bool)",
          "updateRating(address,uint256,uint8)",
          "calculateCreditScore(address)",
          "getRentalHistory(address,uint256)",
          "setAuthorizedContract(address,bool)",
          "isAuthorizedContract(address)",
          "getPaymentTimelinessPercentage(address)",
          "getComplaintResolutionRate(address)",
          "getAverageRating(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreditScore",
            "src": "contracts/CreditScore.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "rentalHistory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RentalHistory)3367_storage))",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:28"
            },
            {
              "label": "creditScores",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:31"
            },
            {
              "label": "authorizedContracts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(RentalHistory)3367_storage))": {
              "label": "mapping(address => mapping(uint256 => struct CreditScore.RentalHistory))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RentalHistory)3367_storage)": {
              "label": "mapping(uint256 => struct CreditScore.RentalHistory)",
              "numberOfBytes": "32"
            },
            "t_struct(RentalHistory)3367_storage": {
              "label": "struct CreditScore.RentalHistory",
              "members": [
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "paymentCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "onTimePayments",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "complaintsResolved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalRating",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ratingCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Escrow.sol:Escrow": {
        "src": "contracts/Escrow.sol:16",
        "version": {
          "withMetadata": "12ebc92bfe8a50def92c1e0a9f274273f795b359535c43ddb6e8323c312d6ecb",
          "withoutMetadata": "58b0d7fd2a9a4b9ad2ea6a50e18ba8c9ae422ea210d4515c55720483ae83b4a2",
          "linkedWithoutMetadata": "58b0d7fd2a9a4b9ad2ea6a50e18ba8c9ae422ea210d4515c55720483ae83b4a2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "createPayment(address,uint256,uint256,uint256)",
          "payWithUSDT(uint256)",
          "recordFiatPayment(uint256,string)",
          "disputePayment(uint256,string)",
          "refundPayment(uint256)",
          "getPayment(uint256)",
          "getPropertyPayments(uint256)",
          "getUserPayments(address)",
          "getPendingPayments(address)",
          "getOverduePayments(address)",
          "updatePlatformFee(uint256)",
          "updateUSDTAddress(address)",
          "getPlatformStats()",
          "calculateFee(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/Escrow.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)816",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "payments",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Payment)4051_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:52"
            },
            {
              "label": "propertyPayments",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "userPayments",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:58"
            },
            {
              "label": "totalPayments",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:61"
            },
            {
              "label": "totalUSDTVolume",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:62"
            },
            {
              "label": "totalFiatVolume",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:63"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)816": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(PaymentStatus)4057": {
              "label": "enum Escrow.PaymentStatus",
              "members": [
                "Pending",
                "Paid",
                "Late",
                "Disputed",
                "Refunded"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(PaymentType)4060": {
              "label": "enum Escrow.PaymentType",
              "members": [
                "USDT",
                "FiatOnRamp"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Payment)4051_storage)": {
              "label": "mapping(uint256 => struct Escrow.Payment)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Payment)4051_storage": {
              "label": "struct Escrow.Payment",
              "members": [
                {
                  "label": "paymentId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dueDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "paidDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "status",
                  "type": "t_enum(PaymentStatus)4057",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "paymentType",
                  "type": "t_enum(PaymentType)4060",
                  "offset": 1,
                  "slot": "7"
                },
                {
                  "label": "transactionHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Language.sol:Language": {
        "src": "contracts/Language.sol:14",
        "version": {
          "withMetadata": "97b252d233d430e4598824ec3246f304df175d5af105c396c16db61e618085f6",
          "withoutMetadata": "621e4d3c1778ecdffeac4cb37449ac771a39004ce60f798ab95c0e88d04c46a8",
          "linkedWithoutMetadata": "621e4d3c1778ecdffeac4cb37449ac771a39004ce60f798ab95c0e88d04c46a8"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setLanguagePreference(string)",
          "setTranslationFile(string,string)",
          "addSupportedLanguage(string)",
          "removeSupportedLanguage(string)",
          "getLanguagePreference(address)",
          "getTranslationFile(string)",
          "getTranslationFileDetails(string)",
          "getSupportedLanguages()",
          "getUserLanguageDetails(address)",
          "isLanguageCodeSupported(string)",
          "getTotalSupportedLanguages()",
          "getTranslationFileVersion(string)",
          "getUsersByLanguage(string,uint256,uint256)",
          "getLanguageStats()",
          "isValidLanguageCode(string)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Language",
            "src": "contracts/Language.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "userLanguages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserLanguage)5089_storage)",
              "contract": "Language",
              "src": "contracts/Language.sol:32"
            },
            {
              "label": "translationFiles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TranslationFile)5100_storage)",
              "contract": "Language",
              "src": "contracts/Language.sol:35"
            },
            {
              "label": "supportedLanguages",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Language",
              "src": "contracts/Language.sol:38"
            },
            {
              "label": "isLanguageSupported",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "Language",
              "src": "contracts/Language.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(UserLanguage)5089_storage)": {
              "label": "mapping(address => struct Language.UserLanguage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TranslationFile)5100_storage)": {
              "label": "mapping(string => struct Language.TranslationFile)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TranslationFile)5100_storage": {
              "label": "struct Language.TranslationFile",
              "members": [
                {
                  "label": "languageCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "version",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "updatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserLanguage)5089_storage": {
              "label": "struct Language.UserLanguage",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "languageCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Listings.sol:Listings": {
        "src": "contracts/Listings.sol:14",
        "version": {
          "withMetadata": "59002a9d560fe215f54e8d5d1fd32220e18e08b54836cf27862df51ad732b72a",
          "withoutMetadata": "1664c7980649dc5bd0b877b7a9e5e6b6992bb7eb71f273967dd2f064ffd7b81e",
          "linkedWithoutMetadata": "1664c7980649dc5bd0b877b7a9e5e6b6992bb7eb71f273967dd2f064ffd7b81e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addProperty(string,uint8,uint256,string)",
          "editProperty(uint256,string,uint8,uint256,string)",
          "toggleAvailability(uint256,bool)",
          "verifyLandlord(address,string)",
          "updateLandlordKYC(address,string)",
          "getProperty(uint256)",
          "getLandlordProperties(address)",
          "getAvailableProperties(uint256,uint256)",
          "getTotalProperties()",
          "getLandlordKYC(address)",
          "isLandlordVerified(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Listings",
            "src": "contracts/Listings.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Property)5874_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:32"
            },
            {
              "label": "landlordProperties",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:35"
            },
            {
              "label": "availableProperties",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:38"
            },
            {
              "label": "totalProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Listings",
              "src": "contracts/Listings.sol:41"
            },
            {
              "label": "landlordKYC",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(PropertyType)5854": {
              "label": "enum Listings.PropertyType",
              "members": [
                "House",
                "Office"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)5874_storage)": {
              "label": "mapping(uint256 => struct Listings.Property)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Property)5874_storage": {
              "label": "struct Listings.Property",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "propertyType",
                  "type": "t_enum(PropertyType)5854",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rentAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAvailable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OnRamp.sol:OnRamp": {
        "src": "contracts/OnRamp.sol:14",
        "version": {
          "withMetadata": "4b7a00c0e92fa860a784da11802ca2ea66b7f31b3cedf47869c12e3984bc54a6",
          "withoutMetadata": "8ac18098c5362b298a51a3267c8d0ea36aeb64196233f2d385580e28cd2f3cbf",
          "linkedWithoutMetadata": "8ac18098c5362b298a51a3267c8d0ea36aeb64196233f2d385580e28cd2f3cbf"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "recordOnRamp(address,uint256,uint256,string)",
          "verifyTransaction(uint256,string)",
          "setAuthorizedContract(address,bool)",
          "getOnRampTx(uint256)",
          "getTransactionByProviderId(string)",
          "getTenantTransactions(address)",
          "getPropertyTransactions(uint256)",
          "getVerifiedTenantTransactions(address)",
          "getTenantTotalAmount(address)",
          "getTenantVerifiedAmount(address)",
          "getTotalTransactions()",
          "getTotalVerifiedTransactions()",
          "isTransactionVerified(uint256)",
          "isOnRampTxIdRecorded(string)",
          "isAuthorizedContract(address)",
          "getRecentTenantTransactions(address,uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OnRamp",
            "src": "contracts/OnRamp.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "onRampTransactions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(OnRampTransaction)6570_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:28"
            },
            {
              "label": "tenantTransactions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:31"
            },
            {
              "label": "propertyTransactions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:34"
            },
            {
              "label": "providerTransactionMap",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:37"
            },
            {
              "label": "totalTransactions",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:40"
            },
            {
              "label": "authorizedContracts",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OnRampTransaction)6570_storage)": {
              "label": "mapping(uint256 => struct OnRamp.OnRampTransaction)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OnRampTransaction)6570_storage": {
              "label": "struct OnRamp.OnRampTransaction",
              "members": [
                {
                  "label": "transactionId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "onRampTxId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isVerified",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "verificationHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Reminders.sol:Reminders": {
        "src": "contracts/Reminders.sol:14",
        "version": {
          "withMetadata": "5efe78049ff53064448e0fcad464ba8f1ee81264e0a1c0f384cad090f409ef6c",
          "withoutMetadata": "9f194b214085bd3b821dc3638fb7924d34c73a3b456f7b83fe353fb625280ec0",
          "linkedWithoutMetadata": "9f194b214085bd3b821dc3638fb7924d34c73a3b456f7b83fe353fb625280ec0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setReminder(uint256,address,address,uint256,uint8,string)",
          "triggerReminder(uint256)",
          "cancelReminder(uint256)",
          "updateKeeperRegistry(address)",
          "getReminder(uint256)",
          "getPropertyReminders(uint256)",
          "getTenantReminders(address)",
          "getLandlordReminders(address)",
          "getActiveReminders(uint256,uint256)",
          "getDueReminders(uint256)",
          "getTotalReminders()",
          "getTotalActiveReminders()",
          "isReminderActive(uint256)",
          "isReminderDue(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reminders",
            "src": "contracts/Reminders.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "reminders",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Reminder)7358_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:33"
            },
            {
              "label": "propertyReminders",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:36"
            },
            {
              "label": "tenantReminders",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:39"
            },
            {
              "label": "landlordReminders",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:42"
            },
            {
              "label": "activeReminders",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:45"
            },
            {
              "label": "totalReminders",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:48"
            },
            {
              "label": "keeperRegistry",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ReminderType)7336": {
              "label": "enum Reminders.ReminderType",
              "members": [
                "Rent",
                "Complaint"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Reminder)7358_storage)": {
              "label": "mapping(uint256 => struct Reminders.Reminder)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Reminder)7358_storage": {
              "label": "struct Reminders.Reminder",
              "members": [
                {
                  "label": "reminderId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dueDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "reminderType",
                  "type": "t_enum(ReminderType)7336",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "5"
                },
                {
                  "label": "isTriggered",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "5"
                },
                {
                  "label": "triggeredAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/RentChain.sol:RentChain": {
        "src": "contracts/RentChain.sol:25",
        "version": {
          "withMetadata": "6c4b9e0bf3a7a826e266239a8829c699f89ef950683563dc1a395401bce30389",
          "withoutMetadata": "8229428446c29c40238cfeb4389be737c6fbdcdfc89b2221525b8d5253c0b5aa",
          "linkedWithoutMetadata": "8229428446c29c40238cfeb4389be737c6fbdcdfc89b2221525b8d5253c0b5aa"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address,address,address)",
          "updateContract(string,address)",
          "pausePlatform(string)",
          "unpausePlatform()",
          "getContractAddresses()",
          "getPlatformStats()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RentChain",
            "src": "contracts/RentChain.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "escrowContract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(Escrow)5070",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:27"
            },
            {
              "label": "listingsContract",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Listings)6541",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:28"
            },
            {
              "label": "complaintsContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(Complaints)3338",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:29"
            },
            {
              "label": "reportsContract",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(Reports)9594",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:30"
            },
            {
              "label": "creditScoreContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(CreditScore)4007",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:31"
            },
            {
              "label": "remindersContract",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(Reminders)8168",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:32"
            },
            {
              "label": "chatContract",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(Chat)2757",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:33"
            },
            {
              "label": "onRampContract",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(OnRamp)7321",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:34"
            },
            {
              "label": "languageContract",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(Language)5839",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Chat)2757": {
              "label": "contract Chat",
              "numberOfBytes": "20"
            },
            "t_contract(Complaints)3338": {
              "label": "contract Complaints",
              "numberOfBytes": "20"
            },
            "t_contract(CreditScore)4007": {
              "label": "contract CreditScore",
              "numberOfBytes": "20"
            },
            "t_contract(Escrow)5070": {
              "label": "contract Escrow",
              "numberOfBytes": "20"
            },
            "t_contract(Language)5839": {
              "label": "contract Language",
              "numberOfBytes": "20"
            },
            "t_contract(Listings)6541": {
              "label": "contract Listings",
              "numberOfBytes": "20"
            },
            "t_contract(OnRamp)7321": {
              "label": "contract OnRamp",
              "numberOfBytes": "20"
            },
            "t_contract(Reminders)8168": {
              "label": "contract Reminders",
              "numberOfBytes": "20"
            },
            "t_contract(Reports)9594": {
              "label": "contract Reports",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Reports.sol:Reports": {
        "src": "contracts/Reports.sol:14",
        "version": {
          "withMetadata": "74bed61ced439651b852d68fe513a7427caa1f8b01226b96b8c97ac6583066e5",
          "withoutMetadata": "3fbf69188704cbe5799135d07d7d6c4135491875a72d09560a1b065bb0bf2f37",
          "linkedWithoutMetadata": "3fbf69188704cbe5799135d07d7d6c4135491875a72d09560a1b065bb0bf2f37"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "submitReport(address,uint256,uint8,string)",
          "disputeReport(uint256,string)",
          "setPropertyLandlord(uint256,address)",
          "getReport(uint256)",
          "getTenantReports(address)",
          "getPropertyReports(uint256)",
          "getTenantAverageRating(address)",
          "getTotalReports()",
          "getTotalDisputedReports()",
          "getPropertyLandlord(uint256)",
          "isReportDisputed(uint256)",
          "getValidTenantReports(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reports",
            "src": "contracts/Reports.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "reports",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Report)8954_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:29"
            },
            {
              "label": "tenantReports",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:32"
            },
            {
              "label": "propertyReports",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:35"
            },
            {
              "label": "propertyLandlords",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:38"
            },
            {
              "label": "totalReports",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Reports",
              "src": "contracts/Reports.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Report)8954_storage)": {
              "label": "mapping(uint256 => struct Reports.Report)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Report)8954_storage": {
              "label": "struct Reports.Report",
              "members": [
                {
                  "label": "reportId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rating",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isDisputed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "klerosDisputeId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "disputedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      }
    },
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin/contracts/interfaces/IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:15",
        "version": {
          "withMetadata": "5f9dfe97820bc4a14500f42ea2930441dca798fac39f02a16362b8cd29fc6afa",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot",
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:19",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable"
        ],
        "libraries": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol:ERC1967Utils"
        ],
        "methods": [
          "proxiableUUID()",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:18",
        "version": {
          "withMetadata": "1d6f9cfce405f1397cff3b2e5d2737b4d4086c495d8476175ae55ea43e8dfc38",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:11",
        "version": {
          "withMetadata": "c1f4546bbd850723d69183e656d5a123029205377d830634200ac0c36d9296a8",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/Errors.sol:Errors"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:97"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Errors.sol:Errors": {
        "src": "@openzeppelin/contracts/utils/Errors.sol:14",
        "version": {
          "withMetadata": "5f46a4584c437cd91e6e4386b93037e61fa724904275bd84b5f58da24743a61f",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/Pausable.sol:Pausable": {
        "src": "@openzeppelin/contracts/utils/Pausable.sol:17",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "e34a460afe63f8e676880ba0751522137768df1fdd3fff06c598d9006111366b",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Chat.sol:Chat": {
        "src": "contracts/Chat.sol:14",
        "version": {
          "withMetadata": "c3b6a029f2c5e609ebd04a014ee8956af053d0b870816ff1398ff4f60f5ee505",
          "withoutMetadata": "ac4812ab52615cf7a9c37f88b1af3cdf89e7bfc80cf05e462a805153b4f954cc",
          "linkedWithoutMetadata": "ac4812ab52615cf7a9c37f88b1af3cdf89e7bfc80cf05e462a805153b4f954cc"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "logMessage(address,string,uint256)",
          "markMessageAsRead(uint256)",
          "getMessage(uint256)",
          "getMessages(address,address)",
          "getUserMessages(address)",
          "getPropertyMessages(uint256)",
          "getUnreadMessages(address)",
          "getRecentMessages(address,uint256)",
          "getTotalMessages()",
          "getUnreadMessageCount(address)",
          "isMessageRead(uint256)",
          "getConversationParticipants(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Chat",
            "src": "contracts/Chat.sol:49"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "messages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Message)2610_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:27"
            },
            {
              "label": "userMessages",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:30"
            },
            {
              "label": "conversationMessages",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))",
              "contract": "Chat",
              "src": "contracts/Chat.sol:33"
            },
            {
              "label": "propertyMessages",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Chat",
              "src": "contracts/Chat.sol:36"
            },
            {
              "label": "totalMessages",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Chat",
              "src": "contracts/Chat.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_array(t_uint256)dyn_storage))": {
              "label": "mapping(address => mapping(address => uint256[]))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Message)2610_storage)": {
              "label": "mapping(uint256 => struct Chat.Message)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Message)2610_storage": {
              "label": "struct Chat.Message",
              "members": [
                {
                  "label": "messageId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "receiver",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isRead",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Complaints.sol:Complaints": {
        "src": "contracts/Complaints.sol:14",
        "version": {
          "withMetadata": "8c2a821560114c04cf2089e88e95ba557b9d6146921008d19a002be4fe1c236c",
          "withoutMetadata": "e57eaaf02329d1d7f4e4d1a2e986ff4203ae3471266c764ef79ddd15e804acd6",
          "linkedWithoutMetadata": "e57eaaf02329d1d7f4e4d1a2e986ff4203ae3471266c764ef79ddd15e804acd6"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "logComplaint(uint256,string)",
          "resolveComplaint(uint256)",
          "setPropertyLandlord(uint256,address)",
          "getComplaint(uint256)",
          "getPropertyComplaints(uint256)",
          "getTenantComplaints(address)",
          "getOpenPropertyComplaints(uint256)",
          "getTotalComplaints()",
          "getTotalOpenComplaints()",
          "getPropertyLandlord(uint256)",
          "isComplaintOpen(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Complaints",
            "src": "contracts/Complaints.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "complaints",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Complaint)3468_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:31"
            },
            {
              "label": "propertyComplaints",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:34"
            },
            {
              "label": "tenantComplaints",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:37"
            },
            {
              "label": "propertyLandlords",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:40"
            },
            {
              "label": "totalComplaints",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Complaints",
              "src": "contracts/Complaints.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ComplaintStatus)3450": {
              "label": "enum Complaints.ComplaintStatus",
              "members": [
                "Open",
                "Resolved"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Complaint)3468_storage)": {
              "label": "mapping(uint256 => struct Complaints.Complaint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Complaint)3468_storage": {
              "label": "struct Complaints.Complaint",
              "members": [
                {
                  "label": "complaintId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "status",
                  "type": "t_enum(ComplaintStatus)3450",
                  "offset": 20,
                  "slot": "2"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "resolvedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "resolvedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/CreditScore.sol:CreditScore": {
        "src": "contracts/CreditScore.sol:14",
        "version": {
          "withMetadata": "5767f7b5fe4b8c80886c772d3fe2be49073018e6dae550d0b847cff3975696d2",
          "withoutMetadata": "6c1434cac682a20ee0cab17a9d3bf932b35ef9e66946110ad9c9dbc888c6ca84",
          "linkedWithoutMetadata": "6c1434cac682a20ee0cab17a9d3bf932b35ef9e66946110ad9c9dbc888c6ca84"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "updatePaymentHistory(address,uint256,bool)",
          "updateComplaintHistory(address,uint256,bool)",
          "updateRating(address,uint256,uint8)",
          "calculateCreditScore(address)",
          "getRentalHistory(address,uint256)",
          "setAuthorizedContract(address,bool)",
          "isAuthorizedContract(address)",
          "getPaymentTimelinessPercentage(address)",
          "getComplaintResolutionRate(address)",
          "getAverageRating(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CreditScore",
            "src": "contracts/CreditScore.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "rentalHistory",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(RentalHistory)4045_storage))",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:28"
            },
            {
              "label": "creditScores",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:31"
            },
            {
              "label": "authorizedContracts",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "CreditScore",
              "src": "contracts/CreditScore.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(RentalHistory)4045_storage))": {
              "label": "mapping(address => mapping(uint256 => struct CreditScore.RentalHistory))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(RentalHistory)4045_storage)": {
              "label": "mapping(uint256 => struct CreditScore.RentalHistory)",
              "numberOfBytes": "32"
            },
            "t_struct(RentalHistory)4045_storage": {
              "label": "struct CreditScore.RentalHistory",
              "members": [
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "paymentCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "onTimePayments",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "complaintsResolved",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalRating",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ratingCount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "lastUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Escrow.sol:Escrow": {
        "src": "contracts/Escrow.sol:16",
        "version": {
          "withMetadata": "12ebc92bfe8a50def92c1e0a9f274273f795b359535c43ddb6e8323c312d6ecb",
          "withoutMetadata": "58b0d7fd2a9a4b9ad2ea6a50e18ba8c9ae422ea210d4515c55720483ae83b4a2",
          "linkedWithoutMetadata": "58b0d7fd2a9a4b9ad2ea6a50e18ba8c9ae422ea210d4515c55720483ae83b4a2"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address)",
          "createPayment(address,uint256,uint256,uint256)",
          "payWithUSDT(uint256)",
          "recordFiatPayment(uint256,string)",
          "disputePayment(uint256,string)",
          "refundPayment(uint256)",
          "getPayment(uint256)",
          "getPropertyPayments(uint256)",
          "getUserPayments(address)",
          "getPendingPayments(address)",
          "getOverduePayments(address)",
          "updatePlatformFee(uint256)",
          "updateUSDTAddress(address)",
          "getPlatformStats()",
          "calculateFee(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Escrow",
            "src": "contracts/Escrow.sol:81"
          },
          {
            "kind": "state-variable-assignment",
            "name": "platformFee",
            "src": "contracts/Escrow.sol:66"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "usdtToken",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)1468",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:20"
            },
            {
              "label": "payments",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Payment)4753_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:52"
            },
            {
              "label": "propertyPayments",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:55"
            },
            {
              "label": "userPayments",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:58"
            },
            {
              "label": "totalPayments",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:61"
            },
            {
              "label": "totalUSDTVolume",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:62"
            },
            {
              "label": "totalFiatVolume",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:63"
            },
            {
              "label": "platformFee",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Escrow",
              "src": "contracts/Escrow.sol:66"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)1468": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_enum(PaymentStatus)4759": {
              "label": "enum Escrow.PaymentStatus",
              "members": [
                "Pending",
                "Paid",
                "Late",
                "Disputed",
                "Refunded"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(PaymentType)4762": {
              "label": "enum Escrow.PaymentType",
              "members": [
                "USDT",
                "FiatOnRamp"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Payment)4753_storage)": {
              "label": "mapping(uint256 => struct Escrow.Payment)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Payment)4753_storage": {
              "label": "struct Escrow.Payment",
              "members": [
                {
                  "label": "paymentId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "dueDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "paidDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "status",
                  "type": "t_enum(PaymentStatus)4759",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "paymentType",
                  "type": "t_enum(PaymentType)4762",
                  "offset": 1,
                  "slot": "7"
                },
                {
                  "label": "transactionHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Language.sol:Language": {
        "src": "contracts/Language.sol:14",
        "version": {
          "withMetadata": "97b252d233d430e4598824ec3246f304df175d5af105c396c16db61e618085f6",
          "withoutMetadata": "621e4d3c1778ecdffeac4cb37449ac771a39004ce60f798ab95c0e88d04c46a8",
          "linkedWithoutMetadata": "621e4d3c1778ecdffeac4cb37449ac771a39004ce60f798ab95c0e88d04c46a8"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setLanguagePreference(string)",
          "setTranslationFile(string,string)",
          "addSupportedLanguage(string)",
          "removeSupportedLanguage(string)",
          "getLanguagePreference(address)",
          "getTranslationFile(string)",
          "getTranslationFileDetails(string)",
          "getSupportedLanguages()",
          "getUserLanguageDetails(address)",
          "isLanguageCodeSupported(string)",
          "getTotalSupportedLanguages()",
          "getTranslationFileVersion(string)",
          "getUsersByLanguage(string,uint256,uint256)",
          "getLanguageStats()",
          "isValidLanguageCode(string)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Language",
            "src": "contracts/Language.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "userLanguages",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_struct(UserLanguage)5791_storage)",
              "contract": "Language",
              "src": "contracts/Language.sol:32"
            },
            {
              "label": "translationFiles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_struct(TranslationFile)5802_storage)",
              "contract": "Language",
              "src": "contracts/Language.sol:35"
            },
            {
              "label": "supportedLanguages",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Language",
              "src": "contracts/Language.sol:38"
            },
            {
              "label": "isLanguageSupported",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_bool)",
              "contract": "Language",
              "src": "contracts/Language.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_struct(UserLanguage)5791_storage)": {
              "label": "mapping(address => struct Language.UserLanguage)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(TranslationFile)5802_storage)": {
              "label": "mapping(string => struct Language.TranslationFile)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(TranslationFile)5802_storage": {
              "label": "struct Language.TranslationFile",
              "members": [
                {
                  "label": "languageCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "version",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "updatedBy",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(UserLanguage)5791_storage": {
              "label": "struct Language.UserLanguage",
              "members": [
                {
                  "label": "user",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "languageCode",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Listings.sol:Listings": {
        "src": "contracts/Listings.sol:14",
        "version": {
          "withMetadata": "59002a9d560fe215f54e8d5d1fd32220e18e08b54836cf27862df51ad732b72a",
          "withoutMetadata": "1664c7980649dc5bd0b877b7a9e5e6b6992bb7eb71f273967dd2f064ffd7b81e",
          "linkedWithoutMetadata": "1664c7980649dc5bd0b877b7a9e5e6b6992bb7eb71f273967dd2f064ffd7b81e"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "addProperty(string,uint8,uint256,string)",
          "editProperty(uint256,string,uint8,uint256,string)",
          "toggleAvailability(uint256,bool)",
          "verifyLandlord(address,string)",
          "updateLandlordKYC(address,string)",
          "getProperty(uint256)",
          "getLandlordProperties(address)",
          "getAvailableProperties(uint256,uint256)",
          "getTotalProperties()",
          "getLandlordKYC(address)",
          "isLandlordVerified(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Listings",
            "src": "contracts/Listings.sol:56"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "properties",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Property)6576_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:32"
            },
            {
              "label": "landlordProperties",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:35"
            },
            {
              "label": "availableProperties",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:38"
            },
            {
              "label": "totalProperties",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "Listings",
              "src": "contracts/Listings.sol:41"
            },
            {
              "label": "landlordKYC",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_string_storage)",
              "contract": "Listings",
              "src": "contracts/Listings.sol:44"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(PropertyType)6556": {
              "label": "enum Listings.PropertyType",
              "members": [
                "House",
                "Office"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_string_storage)": {
              "label": "mapping(address => string)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Property)6576_storage)": {
              "label": "mapping(uint256 => struct Listings.Property)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Property)6576_storage": {
              "label": "struct Listings.Property",
              "members": [
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "title",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "propertyType",
                  "type": "t_enum(PropertyType)6556",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "rentAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "isAvailable",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "updatedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/MockUSDT.sol:MockUSDT": {
        "src": "contracts/MockUSDT.sol:13",
        "version": {
          "withMetadata": "ac1a08f4e5f1b34e181f86bbe4b5c6254dd39ced93687c6a9026e04c5dda1100",
          "withoutMetadata": "91aefec75adee1108f44d869d0b3d64870ac8e315ab1507f71cdcb1d9fa1e159",
          "linkedWithoutMetadata": "91aefec75adee1108f44d869d0b3d64870ac8e315ab1507f71cdcb1d9fa1e159"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "decimals()",
          "mint(address,uint256)",
          "burn(uint256)",
          "burnFrom(address,uint256)",
          "maxSupply()",
          "remainingMintableSupply()",
          "toWei(uint256)",
          "fromWei(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDT",
            "src": "contracts/MockUSDT.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/OnRamp.sol:OnRamp": {
        "src": "contracts/OnRamp.sol:14",
        "version": {
          "withMetadata": "4b7a00c0e92fa860a784da11802ca2ea66b7f31b3cedf47869c12e3984bc54a6",
          "withoutMetadata": "8ac18098c5362b298a51a3267c8d0ea36aeb64196233f2d385580e28cd2f3cbf",
          "linkedWithoutMetadata": "8ac18098c5362b298a51a3267c8d0ea36aeb64196233f2d385580e28cd2f3cbf"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "recordOnRamp(address,uint256,uint256,string)",
          "verifyTransaction(uint256,string)",
          "setAuthorizedContract(address,bool)",
          "getOnRampTx(uint256)",
          "getTransactionByProviderId(string)",
          "getTenantTransactions(address)",
          "getPropertyTransactions(uint256)",
          "getVerifiedTenantTransactions(address)",
          "getTenantTotalAmount(address)",
          "getTenantVerifiedAmount(address)",
          "getTotalTransactions()",
          "getTotalVerifiedTransactions()",
          "isTransactionVerified(uint256)",
          "isOnRampTxIdRecorded(string)",
          "isAuthorizedContract(address)",
          "getRecentTenantTransactions(address,uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OnRamp",
            "src": "contracts/OnRamp.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "onRampTransactions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(OnRampTransaction)7524_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:28"
            },
            {
              "label": "tenantTransactions",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:31"
            },
            {
              "label": "propertyTransactions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:34"
            },
            {
              "label": "providerTransactionMap",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_string_memory_ptr,t_uint256)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:37"
            },
            {
              "label": "totalTransactions",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:40"
            },
            {
              "label": "authorizedContracts",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "OnRamp",
              "src": "contracts/OnRamp.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(OnRampTransaction)7524_storage)": {
              "label": "mapping(uint256 => struct OnRamp.OnRampTransaction)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(OnRampTransaction)7524_storage": {
              "label": "struct OnRamp.OnRampTransaction",
              "members": [
                {
                  "label": "transactionId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "onRampTxId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "timestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isVerified",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "verificationHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Reminders.sol:Reminders": {
        "src": "contracts/Reminders.sol:14",
        "version": {
          "withMetadata": "5efe78049ff53064448e0fcad464ba8f1ee81264e0a1c0f384cad090f409ef6c",
          "withoutMetadata": "9f194b214085bd3b821dc3638fb7924d34c73a3b456f7b83fe353fb625280ec0",
          "linkedWithoutMetadata": "9f194b214085bd3b821dc3638fb7924d34c73a3b456f7b83fe353fb625280ec0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setReminder(uint256,address,address,uint256,uint8,string)",
          "triggerReminder(uint256)",
          "cancelReminder(uint256)",
          "updateKeeperRegistry(address)",
          "getReminder(uint256)",
          "getPropertyReminders(uint256)",
          "getTenantReminders(address)",
          "getLandlordReminders(address)",
          "getActiveReminders(uint256,uint256)",
          "getDueReminders(uint256)",
          "getTotalReminders()",
          "getTotalActiveReminders()",
          "isReminderActive(uint256)",
          "isReminderDue(uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reminders",
            "src": "contracts/Reminders.sol:62"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "reminders",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Reminder)8312_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:33"
            },
            {
              "label": "propertyReminders",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:36"
            },
            {
              "label": "tenantReminders",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:39"
            },
            {
              "label": "landlordReminders",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:42"
            },
            {
              "label": "activeReminders",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_bool)",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:45"
            },
            {
              "label": "totalReminders",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:48"
            },
            {
              "label": "keeperRegistry",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "Reminders",
              "src": "contracts/Reminders.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_enum(ReminderType)8290": {
              "label": "enum Reminders.ReminderType",
              "members": [
                "Rent",
                "Complaint"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_bool)": {
              "label": "mapping(uint256 => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Reminder)8312_storage)": {
              "label": "mapping(uint256 => struct Reminders.Reminder)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Reminder)8312_storage": {
              "label": "struct Reminders.Reminder",
              "members": [
                {
                  "label": "reminderId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "landlord",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "dueDate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "reminderType",
                  "type": "t_enum(ReminderType)8290",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isActive",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "5"
                },
                {
                  "label": "isTriggered",
                  "type": "t_bool",
                  "offset": 2,
                  "slot": "5"
                },
                {
                  "label": "triggeredAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/RentChain.sol:RentChain": {
        "src": "contracts/RentChain.sol:25",
        "version": {
          "withMetadata": "34abf8791e469a8855b0e300a6114b6c018f73a57b84d9590c855198507086c2",
          "withoutMetadata": "8229428446c29c40238cfeb4389be737c6fbdcdfc89b2221525b8d5253c0b5aa",
          "linkedWithoutMetadata": "8229428446c29c40238cfeb4389be737c6fbdcdfc89b2221525b8d5253c0b5aa"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,address,address,address,address)",
          "updateContract(string,address)",
          "pausePlatform(string)",
          "unpausePlatform()",
          "getContractAddresses()",
          "getPlatformStats()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RentChain",
            "src": "contracts/RentChain.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "escrowContract",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(Escrow)5772",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:27"
            },
            {
              "label": "listingsContract",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(Listings)7243",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:28"
            },
            {
              "label": "complaintsContract",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(Complaints)4016",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:29"
            },
            {
              "label": "reportsContract",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(Reports)10548",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:30"
            },
            {
              "label": "creditScoreContract",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(CreditScore)4709",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:31"
            },
            {
              "label": "remindersContract",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(Reminders)9122",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:32"
            },
            {
              "label": "chatContract",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(Chat)3435",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:33"
            },
            {
              "label": "onRampContract",
              "offset": 0,
              "slot": "9",
              "type": "t_contract(OnRamp)8275",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:34"
            },
            {
              "label": "languageContract",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(Language)6541",
              "contract": "RentChain",
              "src": "contracts/RentChain.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(Chat)3435": {
              "label": "contract Chat",
              "numberOfBytes": "20"
            },
            "t_contract(Complaints)4016": {
              "label": "contract Complaints",
              "numberOfBytes": "20"
            },
            "t_contract(CreditScore)4709": {
              "label": "contract CreditScore",
              "numberOfBytes": "20"
            },
            "t_contract(Escrow)5772": {
              "label": "contract Escrow",
              "numberOfBytes": "20"
            },
            "t_contract(Language)6541": {
              "label": "contract Language",
              "numberOfBytes": "20"
            },
            "t_contract(Listings)7243": {
              "label": "contract Listings",
              "numberOfBytes": "20"
            },
            "t_contract(OnRamp)8275": {
              "label": "contract OnRamp",
              "numberOfBytes": "20"
            },
            "t_contract(Reminders)9122": {
              "label": "contract Reminders",
              "numberOfBytes": "20"
            },
            "t_contract(Reports)10548": {
              "label": "contract Reports",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      },
      "contracts/Reports.sol:Reports": {
        "src": "contracts/Reports.sol:14",
        "version": {
          "withMetadata": "74bed61ced439651b852d68fe513a7427caa1f8b01226b96b8c97ac6583066e5",
          "withoutMetadata": "3fbf69188704cbe5799135d07d7d6c4135491875a72d09560a1b065bb0bf2f37",
          "linkedWithoutMetadata": "3fbf69188704cbe5799135d07d7d6c4135491875a72d09560a1b065bb0bf2f37"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "submitReport(address,uint256,uint8,string)",
          "disputeReport(uint256,string)",
          "setPropertyLandlord(uint256,address)",
          "getReport(uint256)",
          "getTenantReports(address)",
          "getPropertyReports(uint256)",
          "getTenantAverageRating(address)",
          "getTotalReports()",
          "getTotalDisputedReports()",
          "getPropertyLandlord(uint256)",
          "isReportDisputed(uint256)",
          "getValidTenantReports(address)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reports",
            "src": "contracts/Reports.sol:51"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_paused",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "@openzeppelin/contracts/utils/Pausable.sol:18"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:40"
            },
            {
              "label": "reports",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(Report)9908_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:29"
            },
            {
              "label": "tenantReports",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:32"
            },
            {
              "label": "propertyReports",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:35"
            },
            {
              "label": "propertyLandlords",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "Reports",
              "src": "contracts/Reports.sol:38"
            },
            {
              "label": "totalReports",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Reports",
              "src": "contracts/Reports.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Report)9908_storage)": {
              "label": "mapping(uint256 => struct Reports.Report)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Report)9908_storage": {
              "label": "struct Reports.Report",
              "members": [
                {
                  "label": "reportId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tenant",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "propertyId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "rating",
                  "type": "t_uint8",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "ipfsHash",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "createdAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "isDisputed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "klerosDisputeId",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "disputedAt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                }
              ],
              "numberOfBytes": "288"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.22"
      }
    }
  ]
}